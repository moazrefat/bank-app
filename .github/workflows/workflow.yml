name: Main Go Pipeline

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: read

on:
  push:
    branches:
      - main
      - test-branch
  pull_request:

env:
  registry: docker.io/moazrefat/bankapp
          
jobs: 
  build-and-push:
    runs-on: [ self-hosted ]
    strategy:
        fail-fast: false
        matrix:
          names: [app,db]
    name: ${{ matrix.names }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./${{ matrix.names }}
          file: ${{ matrix.names }}/Dockerfile
          tags: ${{ env.registry }}:${{ matrix.names }}
    
  security-scan:
    runs-on: [ self-hosted ]
    needs: build-and-push
    strategy:
        fail-fast: false
        matrix:
          names: [app,db]
    name: ${{ matrix.names }}
    permissions:
      contents: read
    outputs:
      scan-digest: ${{ steps.calculate-scan-hash.outputs.scan_digest }}
    steps:
    - name: Scan for vulnerabilities
      uses: aquasecurity/trivy-action@master
      with: 
        image-ref: ${{ env.registry }}:${{ matrix.names }}
        format: cosign-vuln
        ignore-unfixed: true
        output: ${{ matrix.names }}-scan.json

    - name: Calculate scan file hash
      id: calculate-scan-hash
      run: |
          SCAN_DIGEST=$(sha256sum ${{ matrix.names }}-scan.json | awk '{print $1}')
          echo "::set-output name=scan_digest::$SCAN_DIGEST"
          echo "Hash of ${{ matrix.names }}-scan.json is: $SCAN_DIGEST"        

    - name: Upload vulnerability scan report
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
      with:
        name: ${{ matrix.names }}-scan.json
        path: ${{ matrix.names }}-scan.json
        if-no-files-found: error
  
  check-and-sign: 
    runs-on: [ self-hosted ]
    needs: security-scan
    permissions:
        contents: write
        actions: read
        packages: write
        id-token: write

    strategy:
        fail-fast: false
        matrix:
          names: [app,db]
    name: ${{ matrix.names }}
    steps:
    - name: Download scan
      uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # v3.0.0
      with:
        name: ${{ matrix.names }}-scan.json

    - name: Verify scan
      run: |
        set -euo pipefail
        echo "Hash of ${{ matrix.names }}-scan.json should be: $SCAN_DIGEST"
        COMPUTED_HASH=$(sha256sum ${{ matrix.names }}-scan.json | awk '{print $1}')
        echo "The current computed hash for ${{ matrix.names }}-scan.json is: $COMPUTED_HASH"
        echo "If the two above hashes don't match, ${{ matrix.names }}-scan.json has been tampered with."
        echo "$SCAN_DIGEST ${{ matrix.names }}-scan.json" | sha256sum --strict --check --status || exit -2 

    - name: Install Cosign
      uses: sigstore/cosign-installer@09a077b27eb1310dcfb21981bee195b30ce09de0 # v2.5.0
      with:
        cosign-release: v1.10.0
  
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
  
    - name: write key to sign 
      run: '"echo $key" > cosign.key'
      shell: bash
      env: 
        key: ${{ secrets.COSIGN_PRIVATE_KEY }}

    - name: Sing image Scan
      run: cosign sign --key cosign.key ${{ env.registry }}:${{ matrix.names }}
      env:
        COSIGN_EXPERIMENTAL: "true"
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}