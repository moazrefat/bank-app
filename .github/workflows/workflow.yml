name: Main Go Pipeline

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: read

on:
  push:
    branches:
      - main
      - test-branch
  pull_request:

env:
  registry: docker.io/moazrefat/bankapp
          
jobs: 
  get-containers-list:
    runs-on: [ self-hosted ]
    outputs:
      names: ${{ steps.get-containers.outputs.names }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '^1.18'
      - name: get container names
        id: get-containers
        run: |
          cd scripts/
          echo "names=$(go run main.go)" >> $GITHUB_OUTPUT

  print-containers-list: 
    runs-on: [ self-hosted ]
    needs: [ get-containers-list ]
    steps:
      - name: print containers names
        id: print-containers
        run: echo "${{ needs.get-containers-list.outputs.names }}"

  build-and-push:
    runs-on: [ self-hosted ]
    needs: [ get-containers-list , print-containers-list ]
    strategy:
        fail-fast: false
        matrix:
          names: ${{ fromJson(needs.get-containers-list.outputs.names) }}
    name: ${{ matrix.names }}-build-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./containers/${{ matrix.names }}
          file: ./containers/${{ matrix.names }}/Dockerfile
          tags: ${{ env.registry }}:${{ matrix.names }}
          platforms: linux/x86_64
          
  security-scan:
    runs-on: [ self-hosted ]
    needs: [get-containers-list, build-and-push]
    strategy:
        fail-fast: false
        matrix:
          names: ${{ fromJson(needs.get-containers-list.outputs.names) }}
    name: ${{ matrix.names }}-scan
    permissions:
      contents: read
    outputs:
      scan-app-digest: ${{ steps.calculate-scan-hash.outputs.scan_app_digest }}
      scan-db-digest: ${{ steps.calculate-scan-hash.outputs.scan_db_digest }}
    steps:
    - name: Scan for vulnerabilities
      uses: aquasecurity/trivy-action@master
      with: 
        image-ref: ${{ env.registry }}:${{ matrix.names }}
        format: cosign-vuln
        ignore-unfixed: true
        output: ${{ matrix.names }}-scan.json

    - name: Calculate scan file hash
      id: calculate-scan-hash
      run: |
          SCAN_DIGEST=$(sha256sum ${{ matrix.names }}-scan.json | awk '{print $1}')
          if [ ${{ matrix.names }} == "app" ]; then echo "::set-output name=scan_app_digest::$SCAN_DIGEST"; fi 
          if [ ${{ matrix.names }} == "db" ] ; then echo "::set-output name=scan_db_digest::$SCAN_DIGEST"; fi
          echo "Hash of ${{ matrix.names }}-scan.json is: $SCAN_DIGEST"

    - name: Upload vulnerability scan report
      uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # v3.1.0
      with:
        name: ${{ matrix.names }}-scan.json
        path: ${{ matrix.names }}-scan.json
        if-no-files-found: error
  
  verify-and-sign: 
    runs-on: [ self-hosted ]
    needs: [get-containers-list, security-scan]
    permissions:
        contents: write
        actions: read
        packages: write
        id-token: write
    env:
        SCAN_APP_DIGEST: "${{ needs.security-scan.outputs.scan-app-digest }}"
        SCAN_DB_DIGEST: "${{ needs.security-scan.outputs.scan-db-digest }}"
    strategy:
        fail-fast: false
        matrix:
          names: ${{ fromJson(needs.get-containers-list.outputs.names) }}
    name: ${{ matrix.names }}-sign
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download scan
      uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741 # v3.0.0
      with:
        name: ${{ matrix.names }}-scan.json

    - name: Verify scan
      run: |
        set -euo pipefail
        if [ ${{ matrix.names }} == "app" ]; then SCAN_DIGEST=$SCAN_APP_DIGEST ; fi
        if [ ${{ matrix.names }} == "db" ]; then SCAN_DIGEST=$SCAN_DB_DIGEST ; fi 
        echo "Hash of ${{ matrix.names }}-scan.json should be: $SCAN_DIGEST"
        COMPUTED_HASH=$(sha256sum ${{ matrix.names }}-scan.json | awk '{print $1}')
        echo "The current computed hash for ${{ matrix.names }}-scan.json is: $COMPUTED_HASH"
        echo "If the two above hashes don't match, ${{ matrix.names }}-scan.json has been tampered with."
        echo "$SCAN_DIGEST ${{ matrix.names }}-scan.json" | sha256sum --strict --check --status || exit -2 

    - name: Install Cosign
      uses: sigstore/cosign-installer@v3.3.0
      with:
        cosign-release: 'v2.2.2'
  
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
  
    # - name: write key to sign 
    #   run: '"echo $key" > cosign.key'
    #   shell: bash
    #   env: 
    #     key: ${{ secrets.COSIGN_PRIVATE_KEY }}

    - name: Sing image Scan
      run: cosign sign --yes --key cosign.key ${{ env.registry }}:${{ matrix.names }}
      env:
        COSIGN_EXPERIMENTAL: "true"
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

  
  deploy:
    runs-on: [ self-hosted ]
    needs: [get-containers-list, verify-and-sign]
    strategy:
      fail-fast: false
      matrix:
        names: ${{ fromJson(needs.get-containers-list.outputs.names) }}
    name: ${{ matrix.names }}-sign
    steps:
      - uses: actions-hub/kubectl@master
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        with:
          args: apply -f k8s/${{ matrix.names }}